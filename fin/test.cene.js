"use strict";
var rocketnia = rocketnia || {};
rocketnia.eraFiles = rocketnia.eraFiles || {};
rocketnia.eraFiles[ "test.cene" ] =
"\\= test.cene\n\\= Copyright 2015, 2016 Ross Angle. Released under the MIT License.\n\\=\n\\= These are some tests for Cene. They depend on\n\\= era-cene-prelude.cene.\n\n(test\n  (rev/cons (yep/nil) /cons (nope/nil) /nil)\n  (cons (nope/nil) /cons (yep/nil) /nil))\n\n(test\n  (rev/nil)\n  (nil))\n\n(test\n  (not/yep/nil)\n  (nope/nil))\n\n(test\n  (let x (nope/nil) y (yep/nil)\n  /let x y y x\n  /cons x y)\n  (cons (yep/nil) (nope/nil)))\n\n(test\n  (list (nil) (nil))\n  (cons (nil) /cons (nil) /nil))\n\n(test\n  (dex-struct cons dex-struct.nil dex-struct.nil)\n  (dex-struct cons dex-struct.nil dex-struct.nil))\n\n(test\n  (call-dex (dex-struct cons dex-struct.nil dex-struct.nil)\n    (cons (nil) /nil)\n    (cons (nil) /nil))\n  (yep/nil))\n\n(test\n  (in-dex (dex-default dex-struct.nil dex-struct.nil) /nil)\n  (yep/nil))\n\n(test\n  (in-dex dex-struct.nil /nil)\n  (yep/nil))\n\n(test\n  (case\n    (proj1 yep /call-dex\n      (dex-default dex-struct.nil (dex-struct yep dex-struct.nil))\n      (nil)\n      (yep/nil))\n    nil\n    (yep/nil)\n    (nope/nil))\n  (nope/nil))\n\n(test\n  (table-get (dexable (dex-string/nil) str.woo)\n    (table-shadow (dexable (dex-string/nil) str.woo) (yep/nope/nil)\n    /table-empty/nil))\n  (yep/nope/nil))\n";
