We have only a few main use cases for a Cene npm-installable command-line utility right now:

- Write some code as a family of Cene files, and use it to generate JS for the Web.
- Write some code as a family of Cene files, and use it to generate JS for an npm-installable command-line utility, such as a bootstrapped implementation of Cene itself.
- Write some code as a single Cene file, and execute it on its own as a command-line utility using a shebang line.

So how about this:

$ cene -h
Usage: cene [options] build.cene [arguments]

Options:
  -h, --help             Show this help message and exit.
  -v, --version          Show Cene's version number and exit.
  -i, --in dir           A directory to use as input.
  -b, --build dir        A directory to hold internal results.
  -o, --out dir          A directory where files will be overwritten.
  -c, --command command  A command run whenever the build is complete.
  -w, --watch            Keep running builds whenever inputs change.

(TODO: Support --command. Then support --build, then --watch. We haven't focused on implementing the --build and --watch options yet because they could be a premature optimization.)

To interact with the outside world, the Cene code has access to a few things in the form of nonstandard definitions. Those are now documented in build.rst, js-ffi.rst, and js-client.rst.
