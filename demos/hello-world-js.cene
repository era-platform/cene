\= hello-world-js.cene
\= Copyright 2016 Ross Angle. Released under the MIT License.

\= You can execute this file like so at the command line:
\=
\=   $ cene demos/hello-world-js.cene --out fin/hello-world-js
\=
\= This Cene program creates its output path as a directory, creates
\= the file hello-world.js under that directory, and writes to that
\= file so it contains JavaScript code that logs "Hello, world!".
\=
\= That example command line specifies the output directory as
\= fin/hello-world-js, so the file will be located at
\= fin/hello-world-js/hello-world.js.


(def-macro go unique-ns definition-ns my-stx-details args then
  (basic-nil-macro unique-ns definition-ns my-stx-details then
  /fn unique-ns s mac
  /get-mode/fn mode
  /output-path-blob-utf-8
    (output-path-get (cli-output-directory mode)
      str.\;qq[hello-world.js])
  /sloppy-javascript-quine mode
    (procure-name mode /ns-path definition-ns /list
      str.constructors
      (procure-name mode /ns-path definition-ns /list
        str.constructor-names str.js-main str.name)
      str.tag)
  /nil))

(go)

(defn compile-give-unwrapped-js-effects param js-val body
  (then-js-effects
    (compile-function-js-effects (cons param /nil) body)
  /fn body
  /give-unwrapped-js-effects js-val body))

(defn js-main client
  (compile-give-unwrapped-js-effects str.client client str.\;qq/
  
  console.log( "Hello, world!" );
  
  return client.done( client.wrap( null ) );
  
  ))
